import { DataType, AutoGeneratedGroup, Item, Group } from '@/types/scheduling';

export const AUTO_GENERATED_GROUPS: Record<DataType, AutoGeneratedGroup[]> = {
  [DataType.PEOPLE]: [
    {
      id: 'All',
      description: 'Automatically generated group containing all people',
      generateMembers: (items: Item[]) => items.map(item => item.id)
    }
  ],
  [DataType.SHIFT_TYPES]: [
    {
      id: 'All',
      description: 'Automatically generated group containing all shift types',
      generateMembers: (items: Item[]) => items.map(item => item.id)
    }
  ],
  [DataType.DATES]: [
    {
      id: 'All',
      description: 'Automatically generated group containing all dates',
      generateMembers: (items: Item[]) => items.map(item => item.id)
    }
  ]
};

export function getReservedKeywords(dataType: DataType): string[] {
  return AUTO_GENERATED_GROUPS[dataType].map(group => group.id);
}

export function isReservedKeyword(dataType: DataType, id: string): boolean {
  return getReservedKeywords(dataType).some(keyword => keyword.toLowerCase() === id.toLowerCase());
}

export function filterAutoGenerated(items: (Item | Group)[]): (Item | Group)[] {
  return items.filter(item => !item.isAutoGenerated);
}
