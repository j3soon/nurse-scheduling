// The types for the scheduling data.
export interface Item {
  id: string;
  description: string;
  history?: string[];  // Array of shift type IDs representing historical assignments for people
  isAutoGenerated?: boolean;
}

export interface Group {
  id: string;
  members: string[]; // Array of item IDs
  description: string;
  isAutoGenerated?: boolean;
}

export interface AutoGeneratedGroup {
  id: string;
  description: string;
  generateMembers: (items: Item[]) => string[];
}

export interface DateRange {
  startDate?: string;
  endDate?: string;
}

export enum DataType {
  DATES = 'dates',
  PEOPLE = 'people',
  SHIFT_TYPES = 'shiftTypes'
}

export const SHIFT_TYPE_REQUIREMENT = 'shift_type_requirement';
export const SHIFT_REQUEST_PREFERENCE = 'shift_request_preference';

export interface BasePreference {
  type: string;
  description?: string;
}

export interface ShiftTypeRequirementsPreference extends BasePreference {
  type: typeof SHIFT_TYPE_REQUIREMENT;
  description?: string;
  shift_type: string[];
  required_num_people: number;
  qualified_people: string[];
  preferred_num_people?: number;
  date: string[];
  weight: number;
}

export interface ShiftRequestPreference extends BasePreference {
  type: typeof SHIFT_REQUEST_PREFERENCE;
  description?: string;
  person: string;
  date: string;
  shift_type: string;
  weight: number;
}
